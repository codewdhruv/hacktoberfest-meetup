{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Fundme__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xf3c524dde36b2ab764e68869035955d55e2271e6d61b0e421a9434e9f73be03f",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1056049",
    "logsBloom": "0x
    "blockHash": "0xfcd5d914cd11322337b232181c682dc7cf45f0d1a21267bcbe51d674814d9925",
    "transactionHash": "0xf3c524dde36b2ab764e68869035955d55e2271e6d61b0e421a9434e9f73be03f",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1056049",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "f1047a47966f9eeab95c38a150e96b05",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Fundme__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Fundme.sol\":\"Fundme\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/Fundme.sol\":{\"content\":\"//Get funds from the user\\n//withdraw funds\\n//Set a minimum value in USD\\n\\n//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\nimport \\\"./PriceConverter.sol\\\";\\n    error Fundme__NotOwner();\\ncontract Fundme{\\n\\n    using PriceConverter for uint256;\\n    uint256 public constant minimumUsd=50 * 1e18; //(1*10)**18\\n    address[] private s_funders;\\n    mapping(address=> uint256) private s_addressToAmountFunded;\\n    AggregatorV3Interface private s_priceFeed;\\n  address public immutable i_owner;\\n    constructor(address priceFeedAddress){\\n        i_owner =msg.sender;\\n        s_priceFeed=AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable{\\n        //want to able to set a minimum fund amount\\n        //1. How do we send eth to this contract?\\n\\n        require(msg.value.getConversionRate(s_priceFeed) >= minimumUsd,\\\"Didn't send enough\\\");\\n        //18 decimals\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender]+=msg.value;\\n    }\\n   \\n    function withdraw() public onlyOwner{\\n        \\n        //for loop\\n        //[1,2,3,4]\\n        for(uint256 funderIndex=0; funderIndex<s_funders.length; funderIndex++){\\n            //Code\\n            address funder=s_funders[funderIndex];\\n            s_addressToAmountFunded[funder]=0;\\n        }\\n        //rest the array\\n        s_funders =new address[](0);\\n        //actually withdraw the funds\\n        //transfer\\n        //by using transfer method we can send ethereum to the who call the withdraw() function \\n        //msg.sender=address\\n        //payable(msg.sender)=payable address\\n        // payable(msg.sender).transfer(address(this).balance);\\n        //send\\n        // bool sendSuccess =payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess,\\\"Send Failed\\\");\\n        //call\\n        (bool callSuccess,)=payable(msg.sender).call{value:address(this).balance}(\\\"\\\");\\n        require(callSuccess,\\\"call Failed\\\");\\n    }\\n    modifier onlyOwner{\\n        // require(msg.sender==owner,\\\"sender is not owner\\\");\\n        //The below code is custome error and it is more code efficient\\n        if(msg.sender !=i_owner ){\\n            revert Fundme__NotOwner();\\n        }\\n        _;\\n    }\\n    //What happens if someone sends this contract ETH without calling the fund function\\n    //Two special functions\\n    receive() external payable{\\n        fund();\\n    }\\n    fallback() external payable{\\n        fund();\\n    }\\n    function cheaperWithdraw() public payable onlyOwner{\\n        address[] memory funders=s_funders;\\n        //mapping can't be in memory\\n        for(uint256 funderIndex=0;funderIndex<funders.length;funderIndex++){\\n            address funder=funders[funderIndex];\\n            s_addressToAmountFunded[funder]=0;\\n        }\\n        s_funders=new address[](0);\\n        (bool success,)=i_owner.call{value:address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n  \\n function getAddressToAmountFunded(address fundingAddress)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[fundingAddress];\\n    }\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\",\"keccak256\":\"0x8eb64b44ec64a9364bd32b9cfb11568bb88ea1b67eed375439a0d825a0903880\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n //function to get the price in terms of usd\\n pragma solidity ^0.8.8;\\n import \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n library PriceConverter{\\n    function getPrice(AggregatorV3Interface priceFeed) internal view  returns(uint256){\\n        //Address  0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        //ABI\\n        // AggregatorV3Interface priceFeed=AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\n        (,int256 price,,,)=priceFeed.latestRoundData();\\n        //ETH in terms of USD\\n        //3000.00000000\\n        //If you check the documentation from where the code there it clearly said that it will return 8 decimal values so to just match this because upper value is 18 decimal . \\n        //So here we need to multiply with 10^10 \\n        return uint256(price*1e10); //10**10=10000000000\\n    }\\n    //So the getConversionRate function used to convert the Ethereum to the USD\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal  view returns(uint256){\\n        uint256 ethPrice=getPrice(priceFeed);\\n        //Here we divided it with 10^18 because the two variables are in the form of 1e18 that means result is in the form 1e36\\n        //But we need the answer in 1e18 form . So,we just divided it with 1e18\\n        uint256 ethAmountInUsd=(ethPrice * ethAmount) / 1e18; //if we don't divide it then it would be 36 decimal value\\n        return ethAmountInUsd;\\n    }\\n }\",\"keccak256\":\"0x0592b115bfa0020299ef62e5f431462eb0415d2706243a7b866549458af57acb\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200134b3803806200134b833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6111be6200018d60003960008181610387015281816105c9015281816106190152818161080f01526108ee01526111be6000f3fe60806040526004361061008a5760003560e01c80639e87a5cd116100595780639e87a5cd1461014d578063b60d428814610178578063be2693f014610182578063d7b4750c1461018c578063dba6335f146101c957610099565b80630343fb25146100a3578063098de820146100e05780633ccfd60b1461010b578063893d20e81461012257610099565b36610099576100976101f4565b005b6100a16101f4565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610af6565b61032f565b6040516100d79190610b3c565b60405180910390f35b3480156100ec57600080fd5b506100f5610378565b6040516101029190610b3c565b60405180910390f35b34801561011757600080fd5b50610120610385565b005b34801561012e57600080fd5b506101376105c5565b6040516101449190610b66565b60405180910390f35b34801561015957600080fd5b506101626105ed565b60405161016f9190610be0565b60405180910390f35b6101806101f4565b005b61018a610617565b005b34801561019857600080fd5b506101b360048036038101906101ae9190610c27565b6108a5565b6040516101c09190610b66565b60405180910390f35b3480156101d557600080fd5b506101de6108ec565b6040516101eb9190610b66565b60405180910390f35b6802b5e3af16b1880000610233600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461091090919063ffffffff16565b1015610274576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026b90610cb1565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103269190610d00565b92505081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461040a576040517f85db10ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104b557600080828154811061042f5761042e610d56565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104ad90610d85565b91505061040d565b50600067ffffffffffffffff8111156104d1576104d0610dce565b5b6040519080825280602002602001820160405280156104ff5781602001602082028036833780820191505090505b50600090805190602001906105159291906109ec565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161053c90610e2e565b60006040518083038185875af1925050503d8060008114610579576040519150601f19603f3d011682016040523d82523d6000602084013e61057e565b606091505b50509050806105c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b990610e8f565b60405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461069c576040517f85db10ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561071f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106d5575b5050505050905060005b81518110156107aa57600082828151811061074757610746610d56565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107a290610d85565b915050610729565b50600067ffffffffffffffff8111156107c6576107c5610dce565b5b6040519080825280602002602001820160405280156107f45781602001602082028036833780820191505090505b506000908051906020019061080a9291906109ec565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161085190610e2e565b60006040518083038185875af1925050503d806000811461088e576040519150601f19603f3d011682016040523d82523d6000602084013e610893565b606091505b50509050806108a157600080fd5b5050565b60008082815481106108ba576108b9610d56565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061091c8361094c565b90506000670de0b6b3a764000085836109359190610eaf565b61093f9190610f38565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561099557600080fd5b505afa1580156109a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cd9190610ff6565b5050509150506402540be400816109e49190611071565b915050919050565b828054828255906000526020600020908101928215610a65579160200282015b82811115610a645782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a0c565b5b509050610a729190610a76565b5090565b5b80821115610a8f576000816000905550600101610a77565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ac382610a98565b9050919050565b610ad381610ab8565b8114610ade57600080fd5b50565b600081359050610af081610aca565b92915050565b600060208284031215610b0c57610b0b610a93565b5b6000610b1a84828501610ae1565b91505092915050565b6000819050919050565b610b3681610b23565b82525050565b6000602082019050610b516000830184610b2d565b92915050565b610b6081610ab8565b82525050565b6000602082019050610b7b6000830184610b57565b92915050565b6000819050919050565b6000610ba6610ba1610b9c84610a98565b610b81565b610a98565b9050919050565b6000610bb882610b8b565b9050919050565b6000610bca82610bad565b9050919050565b610bda81610bbf565b82525050565b6000602082019050610bf56000830184610bd1565b92915050565b610c0481610b23565b8114610c0f57600080fd5b50565b600081359050610c2181610bfb565b92915050565b600060208284031215610c3d57610c3c610a93565b5b6000610c4b84828501610c12565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b6000610c9b601283610c54565b9150610ca682610c65565b602082019050919050565b60006020820190508181036000830152610cca81610c8e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d0b82610b23565b9150610d1683610b23565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d4b57610d4a610cd1565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d9082610b23565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610dc357610dc2610cd1565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e18600083610dfd565b9150610e2382610e08565b600082019050919050565b6000610e3982610e0b565b9150819050919050565b7f63616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610e79600b83610c54565b9150610e8482610e43565b602082019050919050565b60006020820190508181036000830152610ea881610e6c565b9050919050565b6000610eba82610b23565b9150610ec583610b23565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610efe57610efd610cd1565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f4382610b23565b9150610f4e83610b23565b925082610f5e57610f5d610f09565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f8881610f69565b8114610f9357600080fd5b50565b600081519050610fa581610f7f565b92915050565b6000819050919050565b610fbe81610fab565b8114610fc957600080fd5b50565b600081519050610fdb81610fb5565b92915050565b600081519050610ff081610bfb565b92915050565b600080600080600060a0868803121561101257611011610a93565b5b600061102088828901610f96565b955050602061103188828901610fcc565b945050604061104288828901610fe1565b935050606061105388828901610fe1565b925050608061106488828901610f96565b9150509295509295909350565b600061107c82610fab565b915061108783610fab565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110c6576110c5610cd1565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561110357611102610cd1565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156111405761113f610cd1565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561117d5761117c610cd1565b5b82820290509291505056fea2646970667358221220101f50488b17be2536f04a94a75778091584a92b1c778a8536285cc05f379d2964736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c80639e87a5cd116100595780639e87a5cd1461014d578063b60d428814610178578063be2693f014610182578063d7b4750c1461018c578063dba6335f146101c957610099565b80630343fb25146100a3578063098de820146100e05780633ccfd60b1461010b578063893d20e81461012257610099565b36610099576100976101f4565b005b6100a16101f4565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610af6565b61032f565b6040516100d79190610b3c565b60405180910390f35b3480156100ec57600080fd5b506100f5610378565b6040516101029190610b3c565b60405180910390f35b34801561011757600080fd5b50610120610385565b005b34801561012e57600080fd5b506101376105c5565b6040516101449190610b66565b60405180910390f35b34801561015957600080fd5b506101626105ed565b60405161016f9190610be0565b60405180910390f35b6101806101f4565b005b61018a610617565b005b34801561019857600080fd5b506101b360048036038101906101ae9190610c27565b6108a5565b6040516101c09190610b66565b60405180910390f35b3480156101d557600080fd5b506101de6108ec565b6040516101eb9190610b66565b60405180910390f35b6802b5e3af16b1880000610233600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461091090919063ffffffff16565b1015610274576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026b90610cb1565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103269190610d00565b92505081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461040a576040517f85db10ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104b557600080828154811061042f5761042e610d56565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104ad90610d85565b91505061040d565b50600067ffffffffffffffff8111156104d1576104d0610dce565b5b6040519080825280602002602001820160405280156104ff5781602001602082028036833780820191505090505b50600090805190602001906105159291906109ec565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161053c90610e2e565b60006040518083038185875af1925050503d8060008114610579576040519150601f19603f3d011682016040523d82523d6000602084013e61057e565b606091505b50509050806105c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b990610e8f565b60405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461069c576040517f85db10ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561071f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106d5575b5050505050905060005b81518110156107aa57600082828151811061074757610746610d56565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107a290610d85565b915050610729565b50600067ffffffffffffffff8111156107c6576107c5610dce565b5b6040519080825280602002602001820160405280156107f45781602001602082028036833780820191505090505b506000908051906020019061080a9291906109ec565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161085190610e2e565b60006040518083038185875af1925050503d806000811461088e576040519150601f19603f3d011682016040523d82523d6000602084013e610893565b606091505b50509050806108a157600080fd5b5050565b60008082815481106108ba576108b9610d56565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061091c8361094c565b90506000670de0b6b3a764000085836109359190610eaf565b61093f9190610f38565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561099557600080fd5b505afa1580156109a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cd9190610ff6565b5050509150506402540be400816109e49190611071565b915050919050565b828054828255906000526020600020908101928215610a65579160200282015b82811115610a645782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a0c565b5b509050610a729190610a76565b5090565b5b80821115610a8f576000816000905550600101610a77565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ac382610a98565b9050919050565b610ad381610ab8565b8114610ade57600080fd5b50565b600081359050610af081610aca565b92915050565b600060208284031215610b0c57610b0b610a93565b5b6000610b1a84828501610ae1565b91505092915050565b6000819050919050565b610b3681610b23565b82525050565b6000602082019050610b516000830184610b2d565b92915050565b610b6081610ab8565b82525050565b6000602082019050610b7b6000830184610b57565b92915050565b6000819050919050565b6000610ba6610ba1610b9c84610a98565b610b81565b610a98565b9050919050565b6000610bb882610b8b565b9050919050565b6000610bca82610bad565b9050919050565b610bda81610bbf565b82525050565b6000602082019050610bf56000830184610bd1565b92915050565b610c0481610b23565b8114610c0f57600080fd5b50565b600081359050610c2181610bfb565b92915050565b600060208284031215610c3d57610c3c610a93565b5b6000610c4b84828501610c12565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b6000610c9b601283610c54565b9150610ca682610c65565b602082019050919050565b60006020820190508181036000830152610cca81610c8e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d0b82610b23565b9150610d1683610b23565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d4b57610d4a610cd1565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d9082610b23565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610dc357610dc2610cd1565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e18600083610dfd565b9150610e2382610e08565b600082019050919050565b6000610e3982610e0b565b9150819050919050565b7f63616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610e79600b83610c54565b9150610e8482610e43565b602082019050919050565b60006020820190508181036000830152610ea881610e6c565b9050919050565b6000610eba82610b23565b9150610ec583610b23565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610efe57610efd610cd1565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f4382610b23565b9150610f4e83610b23565b925082610f5e57610f5d610f09565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f8881610f69565b8114610f9357600080fd5b50565b600081519050610fa581610f7f565b92915050565b6000819050919050565b610fbe81610fab565b8114610fc957600080fd5b50565b600081519050610fdb81610fb5565b92915050565b600081519050610ff081610bfb565b92915050565b600080600080600060a0868803121561101257611011610a93565b5b600061102088828901610f96565b955050602061103188828901610fcc565b945050604061104288828901610fe1565b935050606061105388828901610fe1565b925050608061106488828901610f96565b9150509295509295909350565b600061107c82610fab565b915061108783610fab565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110c6576110c5610cd1565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561110357611102610cd1565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156111405761113f610cd1565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561117d5761117c610cd1565b5b82820290509291505056fea2646970667358221220101f50488b17be2536f04a94a75778091584a92b1c778a8536285cc05f379d2964736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/Fundme.sol:Fundme",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/Fundme.sol:Fundme",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 68,
        "contract": "contracts/Fundme.sol:Fundme",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}